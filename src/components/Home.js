import bg from '../images/malware-bg.jpg'
import { Jumbotron} from "reactstrap";
import {Link} from "react-router-dom";
import React from 'react';
import axios from 'axios';
import {useState, useRef} from 'react';
// import the react-json-view component
import ReactJson from 'react-json-view'



export default function Home() {

    //static
    const [staticReport, setStaticReport] = useState({
        assembly: "",
        entry: "",
        functions: "",
        pe_sections: "",
        malware: ""
    });

    //dynamic
    const [jobId, setJobId] = useState(0);
    const [dynamicReport, setDynamicReport] = useState("");

    //ml
    const [mlReport, setMlReport] = useState({
        result: ""
    });


    const [file, setFile] = useState(''); //storing the uploaded file
    const [data, getFile] = useState({name: "", path: ""}); //storing received file from backend
    const [progress, setProgress] = useState(0); //progress bar
    const el = useRef(); //accessing input element

    const handleChange= (e) => {
        setProgress(0);
        const file = e.target.files[0]; //accessing file
        console.log("FILEEE: ", file);
        setFile(file);
    }

    const uploadFileStatic = () => {
        const formData = new FormData();
        formData.append('file', file); //appending file
        axios.post('http://localhost:3000/upload', formData, {
            onUploadProgress: (ProgressEvent) => {
                let progress = Math.round(
                    ProgressEvent.loaded / ProgressEvent.total *100
                ) + "%";
                setProgress(progress);
            }
        }).then(res => {
            console.log("RESPONSE: ", res);
            getFile({
                name: res.data.name,
                path:'http://localhost:3000' + res.data.path
            })

            // Make a request for static
            axios.get(`http://localhost:3000/static/${res.data.name}`)
                .then(function (response) {
                    // handle success
                    console.log("STATIC REPORT: ", response.data);
                    setStaticReport(response.data);

                })
                .catch(function (error) {
                    console.log( "STATIC REPORT: ",error);
                    setStaticReport(error);
                })
        }).catch(e => {
            console.log("ERROR: ", e);
        })
    }

    const uploadFileDynamic = () => {
        const formData = new FormData();
        formData.append('file', file); //appending file
        axios.post('http://localhost:3000/upload', formData, {
            onUploadProgress: (ProgressEvent) => {
                let progress = Math.round(
                    ProgressEvent.loaded / ProgressEvent.total *100
                ) + "%";
                setProgress(progress);
            }
        }).then(res => {
            console.log("RESPONSE: ", res);
            getFile({
                name: res.data.name,
                path:'http://localhost:3000' + res.data.path
            })

            // Make a request for static
            axios.get(`http://localhost:3000/dynamic/${res.data.name}`)
                .then(function (response) {
                    // handle success
                    console.log("DYNAMIC : ", response.data);
                    setJobId(response.data);

                })
                .catch(function (error) {
                    console.log( "DYNAMIC : ",error);
                    setJobId(error);
                })
        }).catch(e => {
            console.log("ERROR: ", e);
        })
    }

    const getReport = () => {

        axios.get('http://localhost:3000/dynamicReport/' + jobId)
        .then(response => {
            // handle success
            console.log("DYNAMIC REPORT: ", response.data);
            setDynamicReport(response.data);
        })
        .catch(function (error) {
            console.log( "DYNAMIC REPORT: ",error);
        })
    }


    const uploadFileML = () => {
        const formData = new FormData();
        formData.append('file', file); //appending file
        axios.post('http://localhost:3000/upload', formData, {
            onUploadProgress: (ProgressEvent) => {
                let progress = Math.round(
                    ProgressEvent.loaded / ProgressEvent.total *100
                ) + "%";
                setProgress(progress);
            }
        }).then(res => {
            console.log("RESPONSE: ", res);
            getFile({
                name: res.data.name,
                path:'http://localhost:3000' + res.data.path
            })

            // Make a request for static
            axios.get(`http://localhost:3000/ml/${res.data.name}`)
                .then(function (response) {
                    // handle success
                    console.log("ML REPORT: ", response.data);
                    setMlReport({result: response.data});

                })
                .catch(function (error) {
                    console.log( "ML REPORT REPORT: ",error);
                })
        }).catch(e => {
            console.log("ERROR: ", e);
        })
    }

    return (
        <div>
            <div className="home-container">
                {/* Background image*/}
                <img src={bg} className="w-100 position-absolute d-none d-sm-block" alt="malware" />

                {/* Jumbotron*/}
                <div className="container">

                    <div className="row mt-4 mb-5">
                        <div className="col">
                            <br/>
                        </div>

                    </div>
                    <div className="row">
                        <div className="col-lg-10 text-center offset-lg-1 ">
                            <Jumbotron>
                                {/*TITLE*/}
                                <b><h2>Welcome to Malware Lab.</h2></b>
                                <hr/>
                                {/* text to guide user */}
                                <div className="row text-center" >
                                    <div className="col">
                                        <p className="lead">Upload your file here.</p>
                                    </div>
                                </div>

                                {/*File input*/}
                                {/*<div className="row text-center" >*/}
                                {/*    <div className="col-6 center-inp">*/}
                                {/*        <Input type="file" ref={el} onChange={() => handleChange()} name="file" id="exampleFile" />*/}
                                {/*    </div>*/}
                                {/*</div>*/}

                                <input type="file" ref={el} onChange={handleChange} accept=".exe"/>

                                {/* progress bar*/}
                                <div className="progessBar" style={{ width: progress }}>
                                    {progress}
                                </div>

                                {/*choose type of analysis*/}
                                {/*<div className="row text-center" >*/}
                                {/*    <div className="col">*/}
                                {/*    <p className="lead">Please choose which type of analysis you are interested in.</p>*/}
                                {/*    </div>*/}
                                {/*</div>*/}
                                {/*<div className="row text-center " >*/}
                                {/*    <div className="col center-inp">*/}
                                {/*    <div class="form-group">*/}
                                {/*        <select id="inputState" class="form-control">*/}
                                {/*            <option selected>Choose Type...</option>*/}
                                {/*            <option>Static</option>*/}
                                {/*            <option>Dynamic</option>*/}
                                {/*            <option>ML</option>*/}
                                {/*            <option>All</option>*/}
                                {/*        </select>*/}
                                {/*    </div>*/}
                                {/*    </div>*/}
                                {/*</div>*/}

                                {/*SUBMIT BUTTONS */}
                                <div className="row text-center mt-3" >
                                    {/*Static button*/}
                                    <div className="col">
                                    <p>
                                        <Link to="/" className="btn btn-outline-success"><span onClick={uploadFileStatic}>Static</span></Link>
                                    </p>
                                    </div>
                                    {/*Dynamic button*/}
                                    <div className="col">
                                        <p>
                                            <Link to="/" className="btn btn-outline-success"><span onClick={uploadFileDynamic}>Dynamic</span></Link>
                                        </p>
                                    </div>
                                    {/*ML button*/}
                                    <div className="col">
                                        <p>
                                            <Link to="/" className="btn btn-outline-success"><span onClick={uploadFileML}>Machine Learning</span></Link>
                                        </p>
                                    </div>

                                </div>

                        


                                <div className="row text-center mt-3" >

                                </div>


                            {/*    Display received image*/}
                            {data.path && <img src={data.path} alt={data.name} />}
                            </Jumbotron>
                        </div>

                    </div>

                    <div className="row">
                        <div className="col-lg-10 text-center offset-lg-1 ">
                            <Jumbotron>
                                {/* Static report title */}
                                <b><h2>Static Report.</h2></b>
                                <hr/>

                                <div className="row text-center" >
                                    <div className="col">
                                        <table>
                                            <tr>
                                                <th>Malware ?</th>
                                                <td>{staticReport.malware}</td>
                                            </tr>
                                            <tr>
                                                <th>Assembly</th>
                                                <td>{staticReport.assembly}</td>
                                            </tr>
                                            <tr>
                                                <th>Entry</th>
                                                <td>{staticReport.entry}</td>
                                            </tr>
                                            <tr>
                                                <th>Functions</th>
                                                <td>{staticReport.functions}</td>
                                            </tr>
                                            <tr>
                                                <th>PE_Sections</th>
                                                <td>{staticReport.pe_sections}</td>
                                            </tr>

                                        </table>

                                    </div>
                                </div>
                            </Jumbotron>
                        </div>

                    </div>
                {/* DYNMIC REPORT */}
                    <div className="row">
                        <div className="col-lg-10 text-center offset-lg-1 ">
                            <Jumbotron>
                                {/* Ml report title */}
                                <b><h2>Dynamic Report.</h2></b>
                                <hr/>
                                <div className="row text-center" >
                                    <div className="col">
                                    <Link to="/" className="btn btn-outline-success"><span onClick={getReport}>Get report after 10 mins</span></Link>
                                        <hr/>
                                        {dynamicReport.verdict}
                                        <hr/>

                                        <ReactJson src={dynamicReport} displayDataTypes={false}/>
                                        
                                    </div>
                                </div>
                            </Jumbotron>
                        </div>

                    </div>

                    <div className="row">
                        <div className="col-lg-10 text-center offset-lg-1 ">
                            <Jumbotron>
                                {/* Ml report title */}
                                <b><h2>ML Report.</h2></b>
                                <hr/>
                                <p>The closer the score is from 1, it is more likely a malware.</p>
                                <div className="row text-center" >
                                    <div className="col">
                                        <table>
                                            <tr>
                                                <th>Malware /1</th>
                                                <td>{mlReport.result}</td>
                                            </tr>

                                        </table>

                                    </div>
                                </div>
                            </Jumbotron>
                        </div>

                    </div>
                </div>

            </div>

        </div>
    );
}
